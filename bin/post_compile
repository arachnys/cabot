#!/usr/bin/env bash
set -eo pipefail
[[ -n $BIN_DIR ]] && source $BIN_DIR/utils

heroku-install-package() {
  local package=$1
  puts-step "Installing cabot plugin $package"

  set +e
  /app/.heroku/python/bin/pip install $package --exists-action=w --src=./.heroku/src --disable-pip-version-check --no-cache-dir | cleanup | log-output | indent
  PIP_STATUS="${PIPESTATUS[0]}"
  set -e

  if [[ ! $PIP_STATUS -eq 0 ]]; then
    echo
    show-warnings
    exit 1
  fi
}

heroku-install-nodejs() {
  puts-step "Installing nodejs"

  local NODE_VERSION=4.2.6
  local NODE_BASENAME=node-v${NODE_VERSION}-linux-x64
  local NODE_ARCHIVE="http://nodejs.org/dist/v${NODE_VERSION}/${NODE_BASENAME}.tar.gz"

  # make a temp directory
  tempdir="$( mktemp -t node_XXXX )"
  rm -rf $tempdir
  mkdir -p $tempdir

  pushd $tempdir > /dev/null
  curl -s -L -o tmp-nodejs.tar.gz $NODE_ARCHIVE
  tar -zxvf tmp-nodejs.tar.gz > /dev/null
  rm tmp-nodejs.tar.gz
  popd > /dev/null

  mkdir -p $BUILD_DIR/.heroku/vendor
  pushd $BUILD_DIR/.heroku/vendor > /dev/null
  rm -rf node
  mv $tempdir/$NODE_BASENAME node
  popd > /dev/null

  ln -s -f ../../vendor/node/bin/node .heroku/python/bin/node
  ln -s -f ../../vendor/node/bin/node-waf .heroku/python/bin/node-waf
  ln -s -f ../../vendor/node/bin/npm .heroku/python/bin/npm
}

heroku-install-less() {
  puts-step "Installing less"
  npm install -g less
}

main() {
  if [[ ! -n $DYNO ]] || [[ ! -n $CABOT_PLUGINS_ENABLED ]]; then
    return
  fi

  for package in $(echo $CABOT_PLUGINS_ENABLED | tr "," "\n") ; do
    heroku-install-package $package
  done

  heroku-install-nodejs
  heroku-install-less

  echo $PATH

  /app/.heroku/python/bin/python manage.py compress
}

main "$@"
